<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
        >

    <description>Spring公共配置</description>
    <!--配置scheduled的定时调度任务 -->
    <task:executor id="executor" pool-size="1"/>
    <task:scheduler id="scheduler" pool-size="1"/>
    <task:annotation-driven executor="executor" scheduler="scheduler"/>

    <context:component-scan base-package="cn.focus.search.*">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<import resource="applicationContext-redis.xml"/>
	<import resource="applicationContext-memcached.xml"/>
	
    <!-- production环境 -->
    <beans profile="product">
        <context:property-placeholder ignore-unresolvable="true" location="classpath*:/config/product.properties"/>
        <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="locations">
                <list>
                    <value>classpath*:config/product.properties</value>
                </list>
            </property>
        </bean>
    </beans>

    <!-- local development环境 -->
    <beans profile="local">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/config/local.properties"/>
        <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="locations">
                <list>
                    <value>classpath*:config/local.properties</value>
                </list>
            </property>
        </bean>
    </beans>
    
    <!-- test环境 -->
    <beans profile="test">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/config/test.properties"/>
        <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="locations">
                <list>
                    <value>classpath*:config/test.properties</value>
                </list>
            </property>
        </bean>
    </beans>

    <!-- 以下是profiles共用的bean定义-->
     <beans profile="local,product,test">
         <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
             <property name="properties" ref="configProperties"/>
         </bean>
         <!-- 配置dbcp数据源 -->
         <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
             <property name="driverClassName" value="${jdbc.driverClassName}"/>
             <property name="url" value="${jdbc.url}"/>
             <property name="username" value="${jdbc.username}"/>
             <property name="password" value="${jdbc.password}"/>
             <!-- 队列中的最小等待数 -->
             <property name="minIdle" value="${jdbc.minIdle}"/>
             <!-- 队列中的最大等待数 -->
             <property name="maxIdle" value="${jdbc.maxIdle}"/>
             <!-- 最长等待时间，单位毫秒 -->
             <property name="maxWait" value="${jdbc.maxWait}"/>
             <!-- 最大活跃数 -->
             <property name="maxActive" value="${jdbc.maxActive}"/>
             <!--初始大小 -->
             <property name="initialSize" value="${jdbc.initialSize}"/>
             <!-- 用于验证连接是否成功的查询SQL语句 -->
             <property name="validationQuery" value="SELECT 1"></property>
             <!-- 空闲时是否进行验证，检查对象是否有效 -->
			 <property name="testWhileIdle" value="true"></property>
			 <!-- 取得对象时是否进行验证，检查对象是否有效 -->
			 <property name="testOnBorrow" value="true"></property>
			 <!-- 失效检查线程运行时间间隔，如果小于等于0，不会启动检查线程 -->
			 <property name="timeBetweenEvictionRunsMillis" value="3600"></property>
			 <!-- 设定在进行后台对象清理时,每次检查几个对象 -->
			 <property name="numTestsPerEvictionRun" value="3"></property>
			 <!-- 将对象限制时间超过14400的销毁掉 -->
			 <property name="minEvictableIdleTimeMillis" value="14400"></property>
			 <!-- 是否自我中断 -->
			 <property name="removeAbandoned" value="true"/>
			 <!-- 28800据连接会自动断开 -->
			 <property name="removeAbandonedTimeout" value="28800"/>
         </bean>

         <!-- 使用JDBC事物 -->
         <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
             <property name="dataSource" ref="dataSource"/>
         </bean>
		<!-- mybatis设置 -->
         <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
             <property name="dataSource" ref="dataSource"/>
             <property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
         </bean>
         <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
             <constructor-arg index="0" ref="sqlSessionFactory"/>
         </bean>
         
         <!-- restful客户端 -->
         <bean id="restTemplate" class="org.springframework.web.client.RestTemplate "/>
         
     </beans>
</beans>