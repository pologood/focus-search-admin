<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="ParticipleDao">
    <!--mybatis3 这个namespace 必需指定到接口上去 -->
    <resultMap id="BaseResultMap" type="Participle">
        <id 	column="id" 			property="id" 			jdbcType="INTEGER"/>
        <result column="pid" 			property="pid" 			jdbcType="INTEGER"/>
        <result column="name" 			property="name" 		jdbcType="VARCHAR"/>
        <result column="alias_name" 	property="aliasName" 	jdbcType="VARCHAR"/>
        <result column="participles" 	property="participles" 	jdbcType="VARCHAR"/>
        <result column="editor" 		property="editor" 		jdbcType="VARCHAR"/>
        <result column="type" 			property="type" 		jdbcType="INTEGER"/>
        <result column="status" 		property="status" 		jdbcType="INTEGER"/>
        <result column="create_time" 	property="createTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="update_time" 	property="updateTime" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
    </resultMap>

    <sql id="Base_Column_List">
		id,
		pid,
		name,
		alias_name,
		participles,
		editor,
		type,
		status,
		create_time,
		update_time 

	</sql>

	<!--更新-->
    <update id="updateParticiple" parameterType="Participle" statementType="PREPARED" flushCache="true">
        update participle
        <set>
            <if test="name != null">		name 		= #{name},</if>
            <if test="aliasName != null">	alias_name 	= #{aliasName},</if>
            <if test="participles != null">	participles = #{participles},</if>
            <if test="editor != null">		editor 		= #{editor},</if>
            <if test="type != null">		type 		= #{type},</if>
            <if test="status != null">		status 		= #{status},</if>
            <if test="updateTime != null">	update_time = #{updateTime},</if>
            <if test="createTime != null">	create_time = #{createTime},</if>
        </set>
        where pid = #{pid}
    </update>
    
    <!--获取特定分页的对象列表-->
    <select id="getPorjList" parameterType="java.lang.String"  resultMap="BaseResultMap" statementType="PREPARED">
		select 
		<include refid="Base_Column_List"/>	
		from participle
		where status=0;
	</select>
    <select id="getPorjListNum" parameterType="java.lang.String"  resultType="java.lang.Integer" statementType="PREPARED">
		select 
		count(pid)
		from participle
		where status=0;
	</select>
	
	<!--结合groupid和name获取特定分页的对象列表-->
    <select id="getPorjListSearch" parameterType="Participle"  resultMap="BaseResultMap" statementType="PREPARED">
		select 
		<include refid="Base_Column_List"/>	
		from participle
		where status=0 
		<if test="pid != 0">	and pid = #{pid}</if>
		<if test="name != ''"> and name like CONCAT('%','${name}','%' )</if>
	</select>
    <select id="getPorjListSearchNum" parameterType="Participle"  resultType="java.lang.Integer" statementType="PREPARED">
		select 
		count(pid)
		from participle
		where status=0 
		<if test="pid != 0">	and pid = #{pid}</if>
		<if test="name != ''"> and name like CONCAT('%','${name}','%' )</if>
	</select>
    
    <!-- 将已经导出楼盘status状态置1 -->
    <update id="setExported"  flushCache="true">
        update participle
        set status=1
    </update>
    
	<!-- 根据status获取分词 -->
	<select id="getParticiplesByStatus" parameterType="java.lang.Integer" 
	 resultType="java.lang.String" statementType="PREPARED"><!-- resultMap="BaseResultMap"  -->
		select participles	
		from participle
		where status=#{status}
	</select>
	
	<!-- 获取所有需要进入词库的记录 -->
	<select id="getTotalFinalHouseParticipleList" resultMap="BaseResultMap"
		parameterType="java.lang.String" statementType="PREPARED">
		select
		<include refid="Base_Column_List" />
		from participle
		where status = 0;
	</select>
	<!-- 获取刚进入数据，没有分词的记录。 -->
	<select id="getProjListNew" resultMap="BaseResultMap"
		parameterType="java.lang.String" statementType="PREPARED">
		select
		<include refid="Base_Column_List" />
		from participle
		where status = 0 and ISNULL(participles);
	</select>
	<!-- 删除 -->
	<delete id="delParticipleWordsByPid" parameterType="java.lang.Integer" statementType="PREPARED">
		delete from participle
		where pid=#{pid}
	</delete>
</mapper>